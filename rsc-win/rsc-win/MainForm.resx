<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFDB9gZRvfVkUr31xVO+9flTvvX/VL/1/1W/9f9VwPX/VsD1/1fB9f9XwvX/WML2/1jC
        9v9Zw/b/WsP2/1rE9v9bxPb/XMX2/1zF9v9dxvb/Xsf2/1/H9v9fyPb/X8j2/1/J9/lgyffFYMr3ZFzL
        9wYAAAAAAAAAAAAAAABQv/QYUbz0xVK89P9SvfT/U770/1S+9P9Vv/X/Vb/1/1bA9f9XwfX/V8H1/1jC
        9v9Zw/b/WsT2/1rE9v9axPb/W8T2/1zF9v9cxfb/Xsb2/17H9v9fx/b/YMj2/2HI9/9hyff/Ycn3/2LK
        9/9jy/f/Y8v3xWDL9xgAAAAAUMD1BlC89MVRvPT/Ur30/1O99P9TvvT/VL70/1W/9f9WwPX/V8D1/1fB
        9f9YwvX/WcP2/1rD9v9bxPb/YMb2/2DG9v9dxfb/XcX2/17G9v9fx/b/X8f2/2DH9/9hyPf/Ysn3/2PJ
        9/9jyvf/ZMr3/2TL9/9ly/f/Zcz3xV/M9wZQvPRkUbv0/1K89P9SvfT/U730/1S+9P9UvvX/Vb/1/1bA
        9f9XwfX/WML1/3PM9/+o4Pn/z+37/+X1/P/u+f3/7/j9/+T1/P/O7fv/quH5/3bP9/9gx/f/Ycj3/2LJ
        9/9jyvf/ZMr3/2TL9/9ly/f/Zcv3/2bM9/9nzff/Zs33ZFC79MVRu/T/Ubz0/1K99P9TvfT/VL70/1W/
        9f9WwPX/V8D1/4DQ9//T7vv/9fv9/+X2/P/N7vv/ze76/7zp+f+96fn/xOz6/8Pr+v/f9Pz/9Pv9/9Lv
        /P+E1Pj/Y8n3/2TK9/9lyvf/Zsv3/2bM9/9nzPf/aM33/2nO9/9ozffFULv0+VG88/9RvPT/Ur30/1O9
        9P9UvvT/Vb/0/13D9f+75fr/9Pr9/8zu+v+96fn/wuv6/7Tn+f/I7fr/xOv6/8rs+f+Q1/L/wev6/8vu
        +v+35/n/z+/7//D5/f+65/r/acz3/2bL9/9ny/f/aMz3/2jN9/9pzff/as33/2rO9/lQu/P/Ubzz/1K8
        8/9TvfP/VL7z/1W/8/9jxPT/2PD7/9/0/P/B6/r/wOr6/7/q+v+96fn/z+76/3rO7v+d3fX/r+T3/7Di
        9f/C6/r/x+z6/8Xs+v/C6/r/wOr6/+D0/P/V8Pz/cM/3/2jM9/9pzff/ac33/2rO9/9rzvf/bM/3/1C7
        8/9RvPP/Ur3z/1O+8/9UvvP/XcLz/9nw+//j9fz/tuf5/7vp+f/H7Pr/qOP4/8fs+v+H0u//b8ns/0W4
        5f+F0u//eczs/3vO7f+k4fj/xOz6/7no+f+/6vr/s+b5/9vz+//V8Pv/bs32/2rN9/9qzff/a873/2zO
        9/9tz/f/Ubvy/1K88/9SvfP/U77z/1S/8/+/5vn//v7+//f7/f/f9Pz/u+n5/7Xn+f++6vr/seb5/77q
        +v+n3/T/Y8Tp/57b8/9vyOr/yuz5/8fs+v+76fn/t+j5/73p+f+86fn/wuv6/970/P+96Pr/as73/2zO
        9/9sz/f/bc/3/2/Q9/9RvPL/Ur3y/1O98/9UvvP/hND2//z9/f/+/v7//v7+//X7/f/B6/r/sub5/7Lm
        +f+96fn/vOn5/5TY8v9cwej/seHz/6Xc8f/y+v3/uOj5/8/v+/+y5vn/wev6/73p+f+86fn/wOr6//L6
        /f+N2fj/bc/3/27P9/9v0Pf/cNH3/1K88v9TvfL/VL7z/1W/8//c8fv//v7+//7+/v/+/v7//P39/8ru
        +v/C6/r/uuj5/9ry+/+z5fj/PrXj/3fM7f+X1+//T7vl//f7/f/E7Pr/1vH7/8fs+v+05/n/wOr6/7Pm
        +f+86fn/zO76/9bx/P9uz/f/b9D3/3DR9/9w0ff/Ur3y/1O+8v9Uv/L/e831//7+/v/+/v7/+/39/+34
        /P/G7Pr/ye36/8bs+v/C6/r/uej5/63j9/+V2fP/xuz6/8Hn9f9pxen/3fH5/+75/f/A6vr/y+76/8bs
        +v/F7Pr/vur5/7/q+v+96fn/8vr9/4XX+P9w0ff/cNH3/3HR9/9TvfL/Vb7y/1a/8v+y4fn//v7+//X7
        /f/i9fz/x+z6/7Tn+f/R8Pv/vur6/8nt+v+P2PX/eM7y/4DR8v9+0PL/ndr0/53a9P+d2vT/xur5/8Xs
        +v/P7/v/wOr6/7Tn+f+z5vn/vOn5/7Xn+f/f9Pz/tOf6/3DR+P9y0fj/ctH4/1W+8v9Wv/L/V7/y/9nw
        +//T8Pv/v+r6/4TS7/+Q1/L/x+z6/5TZ8v+05Pb/u+n5/4LR8v9Rvu3/U7/t/1bA7f9Ywe7/WMHu/1jB
        7v/A5/j/2PL7/6/i9v9vyev/d83u/5PX8f/M7vr/ye36/83u+v/W8fz/ctH4/3LR+P9z0vj/Vr7y/1e/
        8v9cwfL/7fj8/7vp+f/A6vn/dcvs/3XL7P+A0O//g9Lw/6jh9v+i3vX/kNbz/1fA7f/X8Pr/7Pf8/+z3
        /P+95vf/WMHu/8Dn+P/n9fv/Sbnl/1G95v+J0u//acfq/87u+f+/6vr/uOj5/+r3/f900fj/c9L4/3TT
        +P9Xv/L/V7/y/2DD8//2+/3/xOv6/87v+/+i3fT/uef4/13C6f+U1/H/w+v6/9Xw+v+d2vT/WMHu/+z3
        /P/+/v7//v7+/8nq+P9Ywe7/v+b3/5/a8f+U1/D/idTw/3jM7P9hw+n/fs/t/8Pr+v/G7Pr/8/r9/3fT
        +P9z0vj/dNP4/1e/8f9Yv/L/YMPz//D5/f+66Pn/vun4/4DQ7/+g3fT/teb4/1rB6f+u4vX/0fD7/53a
        9P9Ywe7/7Pf8//7+/v/+/v7/yer4/1fA7v+r4Pb//f3+/8bo9v9kxOr/k9fx/6Tc8v/k9Pr/6ff8/+75
        /f/2+/3/d9P4/3PS9/900vf/V7/x/1i/8f9ewvL/8vn9/8Pr+v+w4/b/ccnr/1W+5/+U2PH/Qrfk/4fT
        8P/E6/r/jtXz/1jB7v+95vf/yer4/8nq+P+l3fX/V8Dt/77m9//t9/v/Qrbj/2bE6P+Dz+z/ZsTo//n8
        /f/+/v7//v7+/+z4/f9z0vf/c9L3/3PT9/9Yv/H/Wb/x/1rB8f/e8vv/4fX8/8nt+v9Mu+X/bMjs/77p
        +f+55/j/yO36/8Dq+v+H0/P/VsDt/1fA7f9VwO3/Ur7t/1O/7f9Tv+3/wOf4/+j1+v9/zuz/3/L5/5fX
        7/9Yvub/v+b1//7+/v/+/v7/2vL8/3HS9/9y0/f/ctP3/1m/8P9ZwPH/WcHx/7jk+P/7/f3/2fL7/4PR
        7v+35vj/xez6/67l+f+76fn/w+v6/8jr+f+/5/j/pN72/5PZ9f+y4/f/teP3/6Te9v/W8Pr//P39/9ny
        +//8/f3/w+f1/9Ht9//8/f3//v7+//7+/v+56Pr/cNH2/3HS9/9x0vf/WL/x/1jA8f9ZwPH/hNH0//7+
        /v/1+/3/3/T8/8nt+v+y5vn/uej5/87v+v+96fn/xOz6/93z+//F6Pb/v+b2/+r2+//d8fn/6Pf8/+75
        /f/3+/3/4fX8//7+/v/+/v7//v7+//7+/v/+/v7//f7+/4nY9/9v0Pb/b9H2/2/R9v9YvvD/WL/w/1nA
        8P9bwfD/4/T7//z9/f/W8fv/wer6/8jt+v/P7/v/xuz6/77p+f/K7fr/3vT7/1m/5/93yuv/idHt/5DU
        7v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/d8/z/bM/2/2zP9v9t0Pb/btD2/1e+
        7v9Yv+//WMDv/1nA8P+P1fT/7vn9/77q+f/N7vr/yO36/7zp+f+/6vr/vOn5/7jo+f/W8fv/T7zm/5XY
        8f/B6fj/odvx//3+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//P39/5Hb+P9qzvb/as72/2rO
        9v9rz/f/V77u/1e+7v9Yv+7/WcDv/1nB7//J6vn/3vT8/93z+//8/f3/w+v6/6rk+P+56Pn/sub5/7bm
        +P87tOP/PLTi/33O7f+P1O//+/39//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/F6/r/Zsz2/2fN
        9v9ozfX/aM31/2jN9v9Wve7/Vr3u/1a+7v9Yvu//V7/v/2LE8P/f8/v//f39//7+/v/Z8vv/yO36/9fy
        +/+86fn/ltnz/zay4v+F0e7/+fz9/1W+5v/J6vf/3/T7//P6/f/9/f3//v7+//3+/v/5/P3/3vP7/2vN
        9P9ky/T/ZMv0/2TL9P9lzPX/Zcz1/1S87f9VvO3/Vbzt/1a87v9Wve7/Vr7u/2nG8P/h8/v//v7+//39
        /f/o9/z/wOr6/8Hr+v/J7Pr/k9fx/7fn+f9mxOn/OrPi/6Db8v/P7/v/xez6/9zz+//S8Pv/9vv9/93z
        +/9tzfP/YMnz/2DJ8/9hyfP/Ycrz/2HK9P9hy/T/U7rr+VO66/9Tu+z/U7vs/1S77f9VvO3/Vb3t/2HC
        7//I6fj//f39/+34/P/J7fr/ven6/8Tr+v/C6/r/v+r6/7Pl+P+85/f/ze76/7Pm+f/G7Pr/4fX8/+/5
        /f/B6fn/ZMny/1zG8v9cxvL/XMfy/1zH8v9dyPL/Xcjy/13I8vlRuOvFUbjr/1G56/9Ruev/Ubrr/1K7
        7P9Tu+z/U7vs/1S87f+L0vL/3fL7/+f3/P/W8fv/wev6/7zp+f/M7vr/zO76/7fn+f/N7vr/2/P7/+z4
        /P/c8fv/h9P0/1jD8f9Yw/H/WMTy/1jE8v9YxPL/WcTy/1nF8v9ZxfL/WcbyxU646mROtun/T7fq/0+4
        6v9PuOr/T7nr/0+56/9Quev/ULrs/1G67P9Su+z/esvx/7Lh9v/Z8Pr/7Pf8//f7/f/2+/3/7/j8/9fw
        +v+v4ff/eM3y/1PA7/9TwO//U8Dw/1TA8P9UwPD/VMHw/1XB8P9UwvH/VMLx/1XC8f9Vw/JkTr3tBky1
        6MVMtOj/TLXo/0y16f9Ntun/Tbbp/0236v9Nt+r/Tbfr/0236/9OuOz/Trns/0657P9TvOz/Vr3u/1a+
        7v9TvO3/T7vt/0+77f9Pu+7/T7zu/0+87v9Pve7/T73u/0+97/9Qve//UL7v/1C+7/9Rv+//UcDvxVHE
        8wYAAAAATLfqGEqy6MVKsef/SrLn/0my5/9Ks+j/SrPo/0q06P9KtOn/SrXp/0q16f9Kter/Srbq/0u2
        6/9Kt+v/S7fr/0u47P9LuOz/Srjs/0u57P9Lue3/S7rt/0u57f9Luu3/S7rt/0u77f9Lu+3/S7zt/0y9
        7sVOwPAYAAAAAAAAAAAAAAAAS7ntBkmy52RIsebFR7Dm+Uew5v9GsOf/R7Hn/0ex5/9Hsuf/R7Lo/0ez
        6P9Hs+n/R7Pp/0ez6f9HtOn/R7Tp/0e06f9Hter/R7Xq/0e16/9Htuv/R7br/0e26/9Htuv/R7fs+Ui4
        7MVJuu1kS8DxBgAAAAAAAAAA8AAAD8AAAAOAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAGAAAABwAAAA/AAAA8=
</value>
  </data>
</root>